2024-04-03 17:50:48.228476 : 6dbf33d859d4134bc0f794b4c11eac478a6a2139
test performance

{
line_node_perf_test.py, avg. FPS: 239.2818
circle_node_perf_test.py, avg. FPS: 241.3116
vox_node_perf_test.py, avg. FPS: 41.79807
}


 ----- 


2024-04-05 11:17:26.134569 : 572dee31309a3f54b79df1d1dbf7fc6beb2ca444
Make sure nodes draw as fast as possible if they do not use opacity

{
line_node_perf_test.py, avg. FPS: 239.1151
test_opacity_perf_test.py, avg. FPS: 51.24171
test_perf_test.py, avg. FPS: 98.04024
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 43.04103
}


 ----- 


2024-04-05 11:31:40.731816 : 2732279ce264f568ba629c07f5c1aea8a1373784
Speed up blending alpha and colors by removing if statements

{
line_node_perf_test.py, avg. FPS: 239.2816
test_opacity_perf_test.py, avg. FPS: 80.01699
test_perf_test.py, avg. FPS: 97.79822
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 43.04638
}


 ----- 


2024-04-05 11:37:28.624966 : e24204337113ae0c922a7ea5df2207371f5c6e08
Try adding perf samples to commit after commit

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.66255
test_perf_test.py, avg. FPS: 99.46484
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 43.04658
}


 ----- 


2024-04-05 11:41:22.567525 : ae865be7a936ec6ba26a1b057264e864168e4d16
Try to not run pre-commit hook, again

{
line_node_perf_test.py, avg. FPS: 239.1153
test_opacity_perf_test.py, avg. FPS: 81.66224
test_perf_test.py, avg. FPS: 99.43963
circle_node_perf_test.py, avg. FPS: 239.7778
vox_node_perf_test.py, avg. FPS: 44.71316
}


 ----- 



2024-04-05 15:16:20.138477 : e017fe51c36985960335792ad4c334b4ce164503
Add libraries as submodules

{
line_node_perf_test.py, avg. FPS: 239.1152
test_opacity_perf_test.py, avg. FPS: 80.1851
test_perf_test.py, avg. FPS: 98.1317
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 43.24937
}


 ----- 



2024-04-10 10:30:20.897533 : 8d34b7db69ca04cce3212ee4fbc425e5951cccd6
Fix mesh rendering so that it is faster and doesn't draw triangles that are behind the screen or all the way out of bounds

{
line_node_perf_test.py, avg. FPS: 238.9486
test_opacity_perf_test.py, avg. FPS: 79.92868
test_perf_test.py, avg. FPS: 98.61657
circle_node_perf_test.py, avg. FPS: 239.6111
vox_node_perf_test.py, avg. FPS: 44.75964
}


 ----- 



2024-04-10 11:15:52.349092 : 752bd79c022414a5d1bc1d27d64174c2dc644e99
Expose attributes of NoiseResource

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 82.42863
test_perf_test.py, avg. FPS: 101.7345
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 44.89149
}


 ----- 



2024-04-11 16:14:32.081177 : 82f80a5033a0b871a2f935e899f67c862673e8b3
Work on GUI mode switching and fix scaling issue when drawing all nodes with respect to camera

{
line_node_perf_test.py, avg. FPS: 238.4486
test_opacity_perf_test.py, avg. FPS: 80.37726
test_perf_test.py, avg. FPS: 98.98022
circle_node_perf_test.py, avg. FPS: 240.7742
vox_node_perf_test.py, avg. FPS: 43.18343
}


 ----- 



2024-04-12 11:48:10.088081 : c353f44b443138a45db9fe98ec7861da6b503d43
Finish GUIButton2DNode callbacks and basic drawing

{
line_node_perf_test.py, avg. FPS: 238.6151
test_opacity_perf_test.py, avg. FPS: 80.22475
test_perf_test.py, avg. FPS: 98.01529
circle_node_perf_test.py, avg. FPS: 239.4444
vox_node_perf_test.py, avg. FPS: 43.23137
}


 ----- 
2024-04-12 15:24:16.327661 : c02927ff010bc205f44d71eec95a1ebd3bad317f
Remove node common data from node base

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.91862
test_perf_test.py, avg. FPS: 98.49517
circle_node_perf_test.py, avg. FPS: 241.6075
vox_node_perf_test.py, avg. FPS: 45.02475
}


 ----- 


2024-04-15 15:26:07.055101 : dce6932e282d0a710b170a1430e187d72315b6f9
Work on GUI and add  to engine_animation for calling code after a certain amount of time

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 81.47538
test_perf_test.py, avg. FPS: 98.1916
circle_node_perf_test.py, avg. FPS: 241.4091
vox_node_perf_test.py, avg. FPS: 45.63897
}


 ----- 



2024-04-16 11:47:08.709131 : 7cf6d43f823f04ff0f03548f86ceb850ea0eaba1
Make it so that audio is not adaptive and that the user needs to control gains to balance everything. Also fix some audio playback errors

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 78.91424
test_perf_test.py, avg. FPS: 98.89349
circle_node_perf_test.py, avg. FPS: 239.7407
vox_node_perf_test.py, avg. FPS: 43.67567
}


 ----- 



2024-04-18 17:13:48.285031 : 3ecb3fe78815035946a836afe41b56afa75b3447
Mainly work on audio playback of waves and tones. Decide on 22050 as max sample rate for now

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 74.12148
test_perf_test.py, avg. FPS: 90.60519
circle_node_perf_test.py, avg. FPS: 239.8918
vox_node_perf_test.py, avg. FPS: 41.26124
}


 ----- 


2024-04-18 17:18:59.143086 : 900a53c1c6747e9af579bc79ac57ad738359e3ea
Due to performance, only allow 11025Hz sample rate for wave and tone playback. ISR takes too much time

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.66111
test_perf_test.py, avg. FPS: 99.62041
circle_node_perf_test.py, avg. FPS: 239.8974
vox_node_perf_test.py, avg. FPS: 44.43056
}


 ----- 



2024-04-18 17:20:08.616369 : a990db02708d5fcbd7f198fa8c7fc0c6ac6933d3
No audio callback

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 90.54546
test_perf_test.py, avg. FPS: 112.4547
circle_node_perf_test.py, avg. FPS: 241.5741
vox_node_perf_test.py, avg. FPS: 49.53446
}


 ----- 


2024-04-19 10:13:24.191822 : c90bbedc2214868553ae738146b901b72462c9c8
Instead of user repeating timer for audio sample callback, use PWM wrap IRQ (faster, less overhead), also use 22050 as playback sample rate

{
line_node_perf_test.py, avg. FPS: 239.0039
test_opacity_perf_test.py, avg. FPS: 89.61009
test_perf_test.py, avg. FPS: 110.6096
circle_node_perf_test.py, avg. FPS: 239.9043
vox_node_perf_test.py, avg. FPS: 48.70479
}


 ----- 



2024-04-19 17:56:21.249225 : 061106a0de7131238c065e0ddbf5a14659bda7de
Fix attr handling for some nodes. Work on RTTTL basics as well as general audio tweaks

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 88.0912
test_perf_test.py, avg. FPS: 110.2682
circle_node_perf_test.py, avg. FPS: 239.7391
vox_node_perf_test.py, avg. FPS: 46.8499
}


 ----- 






2024-04-22 11:51:06.338955 : 04be553c089676d6dc46c39faebe9bd489885793
Remove print statement from Circle2DNode

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 88.48179
test_perf_test.py, avg. FPS: 108.5274
circle_node_perf_test.py, avg. FPS: 241.5709
vox_node_perf_test.py, avg. FPS: 46.86424
}


 ----- 



2024-04-22 15:54:22.639353 : 10af6cce71cd6da052473ccc3e9ef4bf4512206b
Remove print statement from Circle2DNode

{
line_node_perf_test.py, avg. FPS: 239.9343
test_opacity_perf_test.py, avg. FPS: 87.01828
test_perf_test.py, avg. FPS: 108.2373
circle_node_perf_test.py, avg. FPS: 239.9483
vox_node_perf_test.py, avg. FPS: 48.36065
}


 ----- 



2024-04-22 16:37:09.143576 : b8c26b402b234c239ed39b979c698c08ef473fb3
Got file switching to work when importing engine to reset everything. Manually go through all nodes and mark for gc collect and call their __del__ functions. Still have questions about instance objects not being marked

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 88.4274
test_perf_test.py, avg. FPS: 108.6757
circle_node_perf_test.py, avg. FPS: 240.0775
vox_node_perf_test.py, avg. FPS: 48.47466
}


 ----- 



2024-04-23 11:32:44.366691 : e1fed59695c5a8e716c760d16c945a2c0038187f
Require that the new engine_main module gets imported at least once so that the engine can be reset and initialized independent of the engine mdoule that has functions that may be used in other Python files (where you might not want the engine to be reset)

{
line_node_perf_test.py, avg. FPS: 239.0039
test_opacity_perf_test.py, avg. FPS: 88.42712
test_perf_test.py, avg. FPS: 108.6771
circle_node_perf_test.py, avg. FPS: 241.5775
vox_node_perf_test.py, avg. FPS: 46.84073
}


 ----- 



2024-04-23 15:03:04.907650 : f13726ba4eadfe9a13c458fb244a7e1e0eb63f53
Add initial implementation for GUIBItmapButton2DNode. Still need to work on how text should behave, should it auto scale to the current bitmap (unfocused, focused, and pressed)

{
line_node_perf_test.py, avg. FPS: 238.4483
test_opacity_perf_test.py, avg. FPS: 88.57104
test_perf_test.py, avg. FPS: 111.4178
circle_node_perf_test.py, avg. FPS: 238.7479
vox_node_perf_test.py, avg. FPS: 48.42994
}


 ----- 



2024-04-24 10:30:48.935746 : 341eacb050aef6bfd94a3dd83716c1be03ff6f65
Fix sprite seg fault when the sprite has no texture

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 90.03944
test_perf_test.py, avg. FPS: 112.1122
circle_node_perf_test.py, avg. FPS: 240.7442
vox_node_perf_test.py, avg. FPS: 46.90078
}


 ----- 



2024-04-24 13:20:36.542429 : 71288fce6ae71f47e1c097d1525c53da73defffd
Add stop function to Tween stop it and set value to end value. Work on main menu. Floor all drawing nodes to reduce amount of position jitter relative to other nodes/sprites/bitmaps

{
line_node_perf_test.py, avg. FPS: 238.9483
test_opacity_perf_test.py, avg. FPS: 90.03567
test_perf_test.py, avg. FPS: 114.3531
circle_node_perf_test.py, avg. FPS: 240.746
vox_node_perf_test.py, avg. FPS: 48.52477
}


 ----- 



2024-04-25 13:18:19.211569 : 0519ec1e5f13e09f38752592c41e54683f17a681
Add letter and line spacing to nodes that draw text

{
line_node_perf_test.py, avg. FPS: 238.7817
test_opacity_perf_test.py, avg. FPS: 87.53579
test_perf_test.py, avg. FPS: 110.9827
circle_node_perf_test.py, avg. FPS: 239.4127
vox_node_perf_test.py, avg. FPS: 48.48932
}


 ----- 



2024-04-25 13:49:56.377088 : b0b074b73689dead1a55f3d966fe5c39c0716b7d
Add letter and line spacing to nodes that draw text

{
line_node_perf_test.py, avg. FPS: 238.7818
test_opacity_perf_test.py, avg. FPS: 88.42722
test_perf_test.py, avg. FPS: 109.6031
circle_node_perf_test.py, avg. FPS: 241.0775
vox_node_perf_test.py, avg. FPS: 46.82267
}


 ----- 



2024-04-25 14:34:58.388302 : 61c0162fec6f6b9207a44c54a0c7b63cde3633da
Fix letter_spacing making text higher on the screen

{
line_node_perf_test.py, avg. FPS: 238.7818
test_opacity_perf_test.py, avg. FPS: 89.20671
test_perf_test.py, avg. FPS: 110.6773
circle_node_perf_test.py, avg. FPS: 241.1111
vox_node_perf_test.py, avg. FPS: 48.48451
}


 ----- 



2024-04-26 11:23:02.585385 : 6b19560435858769dd1544948a120de4a5ec2f74
Fix comment after fixing doc issues

{
line_node_perf_test.py, avg. FPS: 238.9485
test_opacity_perf_test.py, avg. FPS: 89.20692
test_perf_test.py, avg. FPS: 109.0109
circle_node_perf_test.py, avg. FPS: 241.1234
vox_node_perf_test.py, avg. FPS: 48.48499
}


 ----- 


2024-04-26 14:43:56.953359 : ce64d158064ecee5adf204de751116e938230939
Lots of small features added to VoxelSpace nodes. Still have lots to fix and do

{
line_node_perf_test.py, avg. FPS: 238.9484
test_opacity_perf_test.py, avg. FPS: 87.46048
test_perf_test.py, avg. FPS: 110.1219
circle_node_perf_test.py, avg. FPS: 239.4568
vox_node_perf_test.py, avg. FPS: 44.69227
}


 ----- 



2024-04-26 17:04:24.292776 : c880e390d8694bd763318332d5897347035701b8
Finish adding more features to VoxelSpaceNode (get_abs_height)

{
line_node_perf_test.py, avg. FPS: 239.1152
test_opacity_perf_test.py, avg. FPS: 87.15739
test_perf_test.py, avg. FPS: 110.1959
circle_node_perf_test.py, avg. FPS: 239.6282
vox_node_perf_test.py, avg. FPS: 23.31124
}


 ----- 



2024-04-29 10:38:25.708752 : c553a4db688cb08d81074b354339b06879c8a505
Fix voxelspace performance by making the code ugly, again

{
line_node_perf_test.py, avg. FPS: 238.8374
test_opacity_perf_test.py, avg. FPS: 88.60451
test_perf_test.py, avg. FPS: 107.9736
circle_node_perf_test.py, avg. FPS: 241.2816
vox_node_perf_test.py, avg. FPS: 44.66821
}


 -----


 2024-04-29 12:57:30.817408 : ca5d02b5ca2ef96e6ef4fc65d8a6e5e14f89368c
Tweak voxelspace rendering and add some more features like curvature

{
line_node_perf_test.py, avg. FPS: 239.282
test_opacity_perf_test.py, avg. FPS: 86.60579
test_perf_test.py, avg. FPS: 107.6404
circle_node_perf_test.py, avg. FPS: 241.2816
vox_node_perf_test.py, avg. FPS: 43.46833
}


 ----- 


2024-04-29 17:29:55.099247 : 620342200251fcc836d53d77b28ccdfccb5fc43a
Add VoxelSapceSpriteNode but still need to work on perspective

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 87.86459
test_perf_test.py, avg. FPS: 111.2699
circle_node_perf_test.py, avg. FPS: 241.4483
vox_node_perf_test.py, avg. FPS: 43.95695
}


 ----- 



2024-04-30 17:32:01.439775 : bc3e6b088f7a575f5630288111fc470da75e8008
More work on VoxelSpaceSpriteNode

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 90.03989
test_perf_test.py, avg. FPS: 112.0914
circle_node_perf_test.py, avg. FPS: 239.7778
vox_node_perf_test.py, avg. FPS: 42.75621
}


 ----- 



2024-04-30 17:46:59.474978 : f0d2f5fba6d17161fe47752fec9881c179d6eb79
Fix angle calculation issue for VoxelSpaceSpriteNode. Still need depth buffer, inheritance, and fov scaling on sprites

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 89.61049
test_perf_test.py, avg. FPS: 109.4921
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 42.74595
}


 ----- 



2024-05-01 10:44:07.863444 : f75b088d677b743e61d27c1b590a271f1ff59b61
Add depth buffering

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 87.63598
test_perf_test.py, avg. FPS: 110.7872
circle_node_perf_test.py, avg. FPS: 239.9444
vox_node_perf_test.py, avg. FPS: 37.21629
}


 ----- 



2024-05-01 12:03:45.510984 : 1e1dbc50749ae78483a5cd0b5210270804f8795c
Do not render voxelspace sprites that are outside of the FOV. Not a great solution since sprites that should be half-way visible get clipped

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 88.82636
test_perf_test.py, avg. FPS: 108.6388
circle_node_perf_test.py, avg. FPS: 239.7778
vox_node_perf_test.py, avg. FPS: 36.6067
}


 ----- 



2024-05-01 17:28:48.418526 : a1492e1848d8658564708da24307aad144f985a0
Work on some perspective for voxel sprites. Still needs work in x-axis fov scale

{
line_node_perf_test.py, avg. FPS: 239.1149
test_opacity_perf_test.py, avg. FPS: 88.75212
test_perf_test.py, avg. FPS: 109.2766
circle_node_perf_test.py, avg. FPS: 239.7901
vox_node_perf_test.py, avg. FPS: 36.74629
}


 ----- 



2024-05-01 17:46:52.708689 : 9d2d36b9d158ee0bc6bdd6f6b143e1b0561d5725
Fix sprites disappearing at edge of screen for voxelspace

{
line_node_perf_test.py, avg. FPS: 238.9484
test_opacity_perf_test.py, avg. FPS: 88.65137
test_perf_test.py, avg. FPS: 107.1958
circle_node_perf_test.py, avg. FPS: 239.4568
vox_node_perf_test.py, avg. FPS: 36.21948
}


 ----- 



2024-05-02 11:54:27.810001 : fb72fc9f61e9f04bcd5b6cf7eeee07d7c71b7507
Fix sprites voxel sprites being rendered when behind the camera, add texture_offset and fov_distort flag

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 87.33412
test_perf_test.py, avg. FPS: 109.721
circle_node_perf_test.py, avg. FPS: 241.4483
vox_node_perf_test.py, avg. FPS: 36.73388
}


 ----- 



2024-05-02 14:12:53.301403 : aacd23b8d1909756c6eaa0a392fb8858d0fd7b31
Add dt to all tick callbacks (breaking change that should be done now)

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 86.85848
test_perf_test.py, avg. FPS: 107.0848
circle_node_perf_test.py, avg. FPS: 241.2816
vox_node_perf_test.py, avg. FPS: 36.76242
}


 ----- 



2024-05-03 16:23:00.224837 : 351507b60a6621304b6741e570d54e5f69560652
Hopefully fix jitter when nodes are children of a camera

{
line_node_perf_test.py, avg. FPS: 239.1136
test_opacity_perf_test.py, avg. FPS: 89.52583
test_perf_test.py, avg. FPS: 110.453
circle_node_perf_test.py, avg. FPS: 241.3396
vox_node_perf_test.py, avg. FPS: 36.75231
}


 ----- 



2024-05-03 16:24:22.379564 : 1cebbe818a5795a79641cc1e6a041dd77a7f6ed5
Fix build_and_run script to use run.py

{
line_node_perf_test.py, avg. FPS: 239.1136
test_opacity_perf_test.py, avg. FPS: 87.90957
test_perf_test.py, avg. FPS: 110.4833
circle_node_perf_test.py, avg. FPS: 241.3388
vox_node_perf_test.py, avg. FPS: 36.19683
}


 ----- 



2024-05-06 15:30:04.470664 : a91f244b3ba8289fd98014b0678d0da1127f6776
Minimal version of launcher complete, could use this

{
line_node_perf_test.py, avg. FPS: 239.2801
test_opacity_perf_test.py, avg. FPS: 88.00681
test_perf_test.py, avg. FPS: 110.6382
circle_node_perf_test.py, avg. FPS: 239.8391
vox_node_perf_test.py, avg. FPS: 36.72353
}


 ----- 



2024-05-06 17:20:57.592171 : ee60e2378997c9de1fad8611bf1eea7bd9ab9bc0
When drawing nodes, use camera struct directly instead of looking up attrs

{
line_node_perf_test.py, avg. FPS: 239.1137
test_opacity_perf_test.py, avg. FPS: 88.41113
test_perf_test.py, avg. FPS: 109.5576
circle_node_perf_test.py, avg. FPS: 241.5063
vox_node_perf_test.py, avg. FPS: 36.64981
}


 ----- 



2024-05-07 11:55:21.337495 : ce968c2ae1a5a9efae84325ee53f20c75ad85cc3
Document launcher folder format

{
line_node_perf_test.py, avg. FPS: 239.1137
test_opacity_perf_test.py, avg. FPS: 90.03116
test_perf_test.py, avg. FPS: 109.5577
circle_node_perf_test.py, avg. FPS: 241.5067
vox_node_perf_test.py, avg. FPS: 36.09865
}


 ----- 



2024-05-08 12:20:55.420443 : a5960234cd72d9a160082a698272b32485bde4fb
Work on RTTTL and launcher

{
line_node_perf_test.py, avg. FPS: 239.2805
test_opacity_perf_test.py, avg. FPS: 90.78853
test_perf_test.py, avg. FPS: 110.8446
circle_node_perf_test.py, avg. FPS: 241.5067
vox_node_perf_test.py, avg. FPS: 36.70334
}


 ----- 



2024-05-08 13:41:05.639663 : 953b4d98f7f4988330423e8752e4ded52796a2ac
Work on filesystema nd launcher format

{
line_node_perf_test.py, avg. FPS: 239.1138
test_opacity_perf_test.py, avg. FPS: 90.80988
test_perf_test.py, avg. FPS: 112.5112
circle_node_perf_test.py, avg. FPS: 241.3401
vox_node_perf_test.py, avg. FPS: 36.70269
}


 ----- 



2024-05-09 11:08:52.103460 : 81e2df2b4f69235fa16b7da21f8ed8e29902ad8d
WOrk on RTTTL parsing, still need to work on playing at the correct durations

{
line_node_perf_test.py, avg. FPS: 239.2805
test_opacity_perf_test.py, avg. FPS: 88.63821
test_perf_test.py, avg. FPS: 109.9279
circle_node_perf_test.py, avg. FPS: 239.839
vox_node_perf_test.py, avg. FPS: 36.04927
}


 ----- 



2024-05-09 12:18:37.178099 : 0ecb42b4c1315d82fe811a0541adb6ebb808c0d0
Got RTTTL playback work pretty much correctly

{
line_node_perf_test.py, avg. FPS: 239.2804
test_opacity_perf_test.py, avg. FPS: 90.27954
test_perf_test.py, avg. FPS: 111.7798
circle_node_perf_test.py, avg. FPS: 241.5067
vox_node_perf_test.py, avg. FPS: 36.65404
}


 ----- 



2024-05-10 12:36:51.847863 : cb0a1a681bb228d508c8e9b360c72b07ee798d3a
Add bee game

{
line_node_perf_test.py, avg. FPS: 239.8414
test_opacity_perf_test.py, avg. FPS: 87.07657
test_perf_test.py, avg. FPS: 107.8909
circle_node_perf_test.py, avg. FPS: 241.5052
vox_node_perf_test.py, avg. FPS: 36.55171
}


 ----- 



2024-05-10 12:42:14.727977 : 5f92db14d5cfb66a7e5802f1206f24ec81196b44
Add return from engine.tick() when actually ticks due to FPS limit and fix upload and run scripts to be more automatic

{
line_node_perf_test.py, avg. FPS: 241.5077
test_opacity_perf_test.py, avg. FPS: 88.74709
test_perf_test.py, avg. FPS: 109.5642
circle_node_perf_test.py, avg. FPS: 239.8392
vox_node_perf_test.py, avg. FPS: 35.99564
}


 ----- 



2024-05-10 13:13:09.006115 : cc86fe512cbc7b09c057512dafb3cc329eecd246
Open files using the cwd

{
line_node_perf_test.py, avg. FPS: 241.341
test_opacity_perf_test.py, avg. FPS: 88.74316
test_perf_test.py, avg. FPS: 107.9279
circle_node_perf_test.py, avg. FPS: 239.8398
vox_node_perf_test.py, avg. FPS: 35.99608
}


 ----- 



2024-05-10 13:46:43.433071 : 9e43b3763c99ed0b79c142317801bc5d4287429a
Make main.py and launcher.py work so that when a game ends it goes back to the launcher

{
line_node_perf_test.py, avg. FPS: 239.8412
test_opacity_perf_test.py, avg. FPS: 88.71789
test_perf_test.py, avg. FPS: 107.8537
circle_node_perf_test.py, avg. FPS: 239.8396
vox_node_perf_test.py, avg. FPS: 36.54284
}


 ----- 



2024-05-10 14:02:56.407051 : fc915f7f7c7787d1fbc48c9ff7cbb00c6aabf025
Update docs a bit and get ready to send out new version

{
line_node_perf_test.py, avg. FPS: 239.8356
test_opacity_perf_test.py, avg. FPS: 88.747
test_perf_test.py, avg. FPS: 107.8908
circle_node_perf_test.py, avg. FPS: 239.8402
vox_node_perf_test.py, avg. FPS: 36.54345
}


 ----- 



2024-05-14 12:01:56.634284 : ec5fdc3c2784a6ecf2e437587471770a47305f0b
Get rid of function call to get active screen buffer and add draw filled triangle function

{
line_node_perf_test.py, avg. FPS: 239.2786
test_opacity_perf_test.py, avg. FPS: 94.3083
test_perf_test.py, avg. FPS: 118.3894
circle_node_perf_test.py, avg. FPS: 241.5006
vox_node_perf_test.py, avg. FPS: 37.88422
}


 ----- 



2024-05-14 12:25:10.790652 : 1e3c45ebe18bcf6d9e77ef42813aa3fa0841c40a
Move physics logic around to hopefully make it not depend on running FPS as much

{
line_node_perf_test.py, avg. FPS: 241.3359
test_opacity_perf_test.py, avg. FPS: 92.86024
test_perf_test.py, avg. FPS: 114.4464
circle_node_perf_test.py, avg. FPS: 241.3397
vox_node_perf_test.py, avg. FPS: 37.75498
}


 ----- 



2024-05-14 14:04:57.006202 : 73862b4daf85f2d77c4c1bbdc66857d548be1592
Move all node collections to common file and work on error reporting from launcher

{
line_node_perf_test.py, avg. FPS: 239.6744
test_opacity_perf_test.py, avg. FPS: 93.3197
test_perf_test.py, avg. FPS: 115.1592
circle_node_perf_test.py, avg. FPS: 241.3397
vox_node_perf_test.py, avg. FPS: 38.1254
}


 ----- 



2024-05-15 12:42:07.530449 : 671f6d7ae915639da0d9c0ae8915cf892fb22a0c
Fix seg fault when using rectangle physics node

{
line_node_perf_test.py, avg. FPS: 239.6743
test_opacity_perf_test.py, avg. FPS: 91.43092
test_perf_test.py, avg. FPS: 114.7981
circle_node_perf_test.py, avg. FPS: 241.3383
vox_node_perf_test.py, avg. FPS: 38.10767
}


 ----- 



2024-05-16 13:21:29.865263 : dc3f04ad4111f70178b6cff936171523607fbb0d
Change to using vfs for file access to that multiple platforms do not need to be maintained

{
line_node_perf_test.py, avg. FPS: 241.3414
test_opacity_perf_test.py, avg. FPS: 93.22379
test_perf_test.py, avg. FPS: 119.0853
circle_node_perf_test.py, avg. FPS: 239.6731
vox_node_perf_test.py, avg. FPS: 38.03704
}


 ----- 



2024-05-17 12:17:35.311353 : 9517f33af5b87d37658342ccb92475e1565f60e3
Hopefully fix camera flicker when tweening camera

{
line_node_perf_test.py, avg. FPS: 241.3401
test_opacity_perf_test.py, avg. FPS: 92.47131
test_perf_test.py, avg. FPS: 116.4834
circle_node_perf_test.py, avg. FPS: 239.8409
vox_node_perf_test.py, avg. FPS: 37.70178
}


 ----- 



2024-05-20 10:13:06.169278 : f6013e0f6017d8724bb9568ec74b7e987d44bf68
Work on game saving and file access

{
line_node_perf_test.py, avg. FPS: 241.3412
test_opacity_perf_test.py, avg. FPS: 93.99643
test_perf_test.py, avg. FPS: 117.6591
circle_node_perf_test.py, avg. FPS: 241.3404
vox_node_perf_test.py, avg. FPS: 38.1386
}


 ----- 



2024-05-20 10:19:04.911137 : 1e72968b005797f55748e8525aa2e459a78a0789
Update TODO readme

{
line_node_perf_test.py, avg. FPS: 239.6745
test_opacity_perf_test.py, avg. FPS: 93.99648
test_perf_test.py, avg. FPS: 117.65
circle_node_perf_test.py, avg. FPS: 239.6719
vox_node_perf_test.py, avg. FPS: 37.58708
}


 ----- 



2024-05-20 11:56:35.442913 : c0d75a255186f390ebb763839ef114fde7509697
Fix opacity (Mason)

{
line_node_perf_test.py, avg. FPS: 239.5078
test_opacity_perf_test.py, avg. FPS: 39.40163
test_perf_test.py, avg. FPS: 118.0666
circle_node_perf_test.py, avg. FPS: 241.1725
vox_node_perf_test.py, avg. FPS: 37.57868
}


 -----


 
 2024-05-20 16:05:00.617774 : 3ffd450a64b0c362fb3b6e06708c32f646d773f7
Keep working on saving, fix double math in opacity blend

{
line_node_perf_test.py, avg. FPS: 239.5079
test_opacity_perf_test.py, avg. FPS: 99.73404
test_perf_test.py, avg. FPS: 117.5202
circle_node_perf_test.py, avg. FPS: 241.3394
vox_node_perf_test.py, avg. FPS: 37.41532
}


 ----- 



2024-05-21 13:10:31.994036 : 1f1d9753373d1a036969fe5bc5940cc87e97ade3
Got string saving complete, need to work on restore and delete

{
line_node_perf_test.py, avg. FPS: 239.8412
test_opacity_perf_test.py, avg. FPS: 99.51672
test_perf_test.py, avg. FPS: 117.2426
circle_node_perf_test.py, avg. FPS: 239.6724
vox_node_perf_test.py, avg. FPS: 37.41541
}


 ----- 



2024-05-21 16:22:18.542103 : 0a0e3005ae57f36801f17513eef0ca2b6325e6da
Add destroy methods to all nodes to get rid of them RIGHT NOW

{
line_node_perf_test.py, avg. FPS: 239.8412
test_opacity_perf_test.py, avg. FPS: 95.94606
test_perf_test.py, avg. FPS: 113.5018
circle_node_perf_test.py, avg. FPS: 239.6725
vox_node_perf_test.py, avg. FPS: 36.61673
}


 ----- 



2024-05-22 11:36:27.117674 : 6ab0022759a53faca39f8352de207bae76cfc92d
Finish save, load, and delete methods for engine_save. Still need docs and support for Vector2, Vector3, and Color

{
line_node_perf_test.py, avg. FPS: 239.8403
test_opacity_perf_test.py, avg. FPS: 95.63807
test_perf_test.py, avg. FPS: 113.1502
circle_node_perf_test.py, avg. FPS: 241.3412
vox_node_perf_test.py, avg. FPS: 36.68385
}


 ----- 



2024-05-22 17:45:55.057186 : 8ccda04cb9c0944b1b2a84c5f81bdb92f65d7676
Got save, load, and load_inot working but need to introduce length for parameters since something like a string or bytearray make contain a newline and then mess up loading

{
line_node_perf_test.py, avg. FPS: 239.6742
test_opacity_perf_test.py, avg. FPS: 95.27927
test_perf_test.py, avg. FPS: 112.613
circle_node_perf_test.py, avg. FPS: 239.5063
vox_node_perf_test.py, avg. FPS: 36.6789
}


 ----- 



2024-05-23 14:40:47.090098 : 4086f7951b67ecbda7c3a767f504573f1086ea87
Hopefully fix issue in Tweening by restricting to attributes and making new versions of data

{
line_node_perf_test.py, avg. FPS: 239.674
test_opacity_perf_test.py, avg. FPS: 94.21859
test_perf_test.py, avg. FPS: 111.1593
circle_node_perf_test.py, avg. FPS: 239.673
vox_node_perf_test.py, avg. FPS: 36.44076
}


 ----- 



2024-05-23 14:49:26.889545 : 9b1e1ce14e97ab1cf0b723d9a2c9bb71d03c89a6
Actually don't make new copies for all types during tweening

{
line_node_perf_test.py, avg. FPS: 241.1734
test_opacity_perf_test.py, avg. FPS: 94.91565
test_perf_test.py, avg. FPS: 112.1686
circle_node_perf_test.py, avg. FPS: 239.3407
vox_node_perf_test.py, avg. FPS: 36.51595
}


 ----- 



Tue Jul 9 16:04:36 2024 -0400 : 6453f90ddedc36bae0340755356dace19ad6ab15
Increased node layers to 0 ~ 127 instead of 0 ~ 7

{
line_node_perf_test.py, avg. FPS: 292.6985
test_opacity_perf_test.py, avg. FPS: 123.3255
test_perf_test.py, avg. FPS: 142.5511
circle_node_perf_test.py, avg. FPS: 292.2254
vox_node_perf_test.py, avg. FPS: 44.23928
}


 ----- 



Fri Jul 12 15:20:14 2024 -0400 : 2ce7476e61b43cc8c226de748de68c5bef05f852
Reorder node tick and draw callbacks to two different loops so that user code cannot change camera or other parameters from one node callback to the next

{
line_node_perf_test.py, avg. FPS: 291.3096
test_opacity_perf_test.py, avg. FPS: 127.0885
test_perf_test.py, avg. FPS: 147.8089
circle_node_perf_test.py, avg. FPS: 290.8418
vox_node_perf_test.py, avg. FPS: 44.05459
}


 ----- 