2024-04-03 17:50:48.228476 : 6dbf33d859d4134bc0f794b4c11eac478a6a2139
test performance

{
line_node_perf_test.py, avg. FPS: 239.2818
circle_node_perf_test.py, avg. FPS: 241.3116
vox_node_perf_test.py, avg. FPS: 41.79807
}


 ----- 


2024-04-05 11:17:26.134569 : 572dee31309a3f54b79df1d1dbf7fc6beb2ca444
Make sure nodes draw as fast as possible if they do not use opacity

{
line_node_perf_test.py, avg. FPS: 239.1151
test_opacity_perf_test.py, avg. FPS: 51.24171
test_perf_test.py, avg. FPS: 98.04024
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 43.04103
}


 ----- 


2024-04-05 11:31:40.731816 : 2732279ce264f568ba629c07f5c1aea8a1373784
Speed up blending alpha and colors by removing if statements

{
line_node_perf_test.py, avg. FPS: 239.2816
test_opacity_perf_test.py, avg. FPS: 80.01699
test_perf_test.py, avg. FPS: 97.79822
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 43.04638
}


 ----- 


2024-04-05 11:37:28.624966 : e24204337113ae0c922a7ea5df2207371f5c6e08
Try adding perf samples to commit after commit

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.66255
test_perf_test.py, avg. FPS: 99.46484
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 43.04658
}


 ----- 


2024-04-05 11:41:22.567525 : ae865be7a936ec6ba26a1b057264e864168e4d16
Try to not run pre-commit hook, again

{
line_node_perf_test.py, avg. FPS: 239.1153
test_opacity_perf_test.py, avg. FPS: 81.66224
test_perf_test.py, avg. FPS: 99.43963
circle_node_perf_test.py, avg. FPS: 239.7778
vox_node_perf_test.py, avg. FPS: 44.71316
}


 ----- 



2024-04-05 15:16:20.138477 : e017fe51c36985960335792ad4c334b4ce164503
Add libraries as submodules

{
line_node_perf_test.py, avg. FPS: 239.1152
test_opacity_perf_test.py, avg. FPS: 80.1851
test_perf_test.py, avg. FPS: 98.1317
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 43.24937
}


 ----- 



2024-04-10 10:30:20.897533 : 8d34b7db69ca04cce3212ee4fbc425e5951cccd6
Fix mesh rendering so that it is faster and doesn't draw triangles that are behind the screen or all the way out of bounds

{
line_node_perf_test.py, avg. FPS: 238.9486
test_opacity_perf_test.py, avg. FPS: 79.92868
test_perf_test.py, avg. FPS: 98.61657
circle_node_perf_test.py, avg. FPS: 239.6111
vox_node_perf_test.py, avg. FPS: 44.75964
}


 ----- 



2024-04-10 11:15:52.349092 : 752bd79c022414a5d1bc1d27d64174c2dc644e99
Expose attributes of NoiseResource

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 82.42863
test_perf_test.py, avg. FPS: 101.7345
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 44.89149
}


 ----- 



2024-04-11 16:14:32.081177 : 82f80a5033a0b871a2f935e899f67c862673e8b3
Work on GUI mode switching and fix scaling issue when drawing all nodes with respect to camera

{
line_node_perf_test.py, avg. FPS: 238.4486
test_opacity_perf_test.py, avg. FPS: 80.37726
test_perf_test.py, avg. FPS: 98.98022
circle_node_perf_test.py, avg. FPS: 240.7742
vox_node_perf_test.py, avg. FPS: 43.18343
}


 ----- 



2024-04-12 11:48:10.088081 : c353f44b443138a45db9fe98ec7861da6b503d43
Finish GUIButton2DNode callbacks and basic drawing

{
line_node_perf_test.py, avg. FPS: 238.6151
test_opacity_perf_test.py, avg. FPS: 80.22475
test_perf_test.py, avg. FPS: 98.01529
circle_node_perf_test.py, avg. FPS: 239.4444
vox_node_perf_test.py, avg. FPS: 43.23137
}


 ----- 
2024-04-12 15:24:16.327661 : c02927ff010bc205f44d71eec95a1ebd3bad317f
Remove node common data from node base

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.91862
test_perf_test.py, avg. FPS: 98.49517
circle_node_perf_test.py, avg. FPS: 241.6075
vox_node_perf_test.py, avg. FPS: 45.02475
}


 ----- 


2024-04-15 15:26:07.055101 : dce6932e282d0a710b170a1430e187d72315b6f9
Work on GUI and add  to engine_animation for calling code after a certain amount of time

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 81.47538
test_perf_test.py, avg. FPS: 98.1916
circle_node_perf_test.py, avg. FPS: 241.4091
vox_node_perf_test.py, avg. FPS: 45.63897
}


 ----- 



2024-04-16 11:47:08.709131 : 7cf6d43f823f04ff0f03548f86ceb850ea0eaba1
Make it so that audio is not adaptive and that the user needs to control gains to balance everything. Also fix some audio playback errors

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 78.91424
test_perf_test.py, avg. FPS: 98.89349
circle_node_perf_test.py, avg. FPS: 239.7407
vox_node_perf_test.py, avg. FPS: 43.67567
}


 ----- 



2024-04-18 17:13:48.285031 : 3ecb3fe78815035946a836afe41b56afa75b3447
Mainly work on audio playback of waves and tones. Decide on 22050 as max sample rate for now

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 74.12148
test_perf_test.py, avg. FPS: 90.60519
circle_node_perf_test.py, avg. FPS: 239.8918
vox_node_perf_test.py, avg. FPS: 41.26124
}


 ----- 


2024-04-18 17:18:59.143086 : 900a53c1c6747e9af579bc79ac57ad738359e3ea
Due to performance, only allow 11025Hz sample rate for wave and tone playback. ISR takes too much time

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.66111
test_perf_test.py, avg. FPS: 99.62041
circle_node_perf_test.py, avg. FPS: 239.8974
vox_node_perf_test.py, avg. FPS: 44.43056
}


 ----- 



2024-04-18 17:20:08.616369 : a990db02708d5fcbd7f198fa8c7fc0c6ac6933d3
No audio callback

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 90.54546
test_perf_test.py, avg. FPS: 112.4547
circle_node_perf_test.py, avg. FPS: 241.5741
vox_node_perf_test.py, avg. FPS: 49.53446
}


 ----- 


2024-04-19 10:13:24.191822 : c90bbedc2214868553ae738146b901b72462c9c8
Instead of user repeating timer for audio sample callback, use PWM wrap IRQ (faster, less overhead), also use 22050 as playback sample rate

{
line_node_perf_test.py, avg. FPS: 239.0039
test_opacity_perf_test.py, avg. FPS: 89.61009
test_perf_test.py, avg. FPS: 110.6096
circle_node_perf_test.py, avg. FPS: 239.9043
vox_node_perf_test.py, avg. FPS: 48.70479
}


 ----- 



2024-04-19 17:56:21.249225 : 061106a0de7131238c065e0ddbf5a14659bda7de
Fix attr handling for some nodes. Work on RTTTL basics as well as general audio tweaks

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 88.0912
test_perf_test.py, avg. FPS: 110.2682
circle_node_perf_test.py, avg. FPS: 239.7391
vox_node_perf_test.py, avg. FPS: 46.8499
}


 ----- 






2024-04-22 11:51:06.338955 : 04be553c089676d6dc46c39faebe9bd489885793
Remove print statement from Circle2DNode

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 88.48179
test_perf_test.py, avg. FPS: 108.5274
circle_node_perf_test.py, avg. FPS: 241.5709
vox_node_perf_test.py, avg. FPS: 46.86424
}


 ----- 



2024-04-22 15:54:22.639353 : 10af6cce71cd6da052473ccc3e9ef4bf4512206b
Remove print statement from Circle2DNode

{
line_node_perf_test.py, avg. FPS: 239.9343
test_opacity_perf_test.py, avg. FPS: 87.01828
test_perf_test.py, avg. FPS: 108.2373
circle_node_perf_test.py, avg. FPS: 239.9483
vox_node_perf_test.py, avg. FPS: 48.36065
}


 ----- 



2024-04-22 16:37:09.143576 : b8c26b402b234c239ed39b979c698c08ef473fb3
Got file switching to work when importing engine to reset everything. Manually go through all nodes and mark for gc collect and call their __del__ functions. Still have questions about instance objects not being marked

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 88.4274
test_perf_test.py, avg. FPS: 108.6757
circle_node_perf_test.py, avg. FPS: 240.0775
vox_node_perf_test.py, avg. FPS: 48.47466
}


 ----- 



2024-04-23 11:32:44.366691 : e1fed59695c5a8e716c760d16c945a2c0038187f
Require that the new engine_main module gets imported at least once so that the engine can be reset and initialized independent of the engine mdoule that has functions that may be used in other Python files (where you might not want the engine to be reset)

{
line_node_perf_test.py, avg. FPS: 239.0039
test_opacity_perf_test.py, avg. FPS: 88.42712
test_perf_test.py, avg. FPS: 108.6771
circle_node_perf_test.py, avg. FPS: 241.5775
vox_node_perf_test.py, avg. FPS: 46.84073
}


 ----- 



2024-04-23 15:03:04.907650 : f13726ba4eadfe9a13c458fb244a7e1e0eb63f53
Add initial implementation for GUIBItmapButton2DNode. Still need to work on how text should behave, should it auto scale to the current bitmap (unfocused, focused, and pressed)

{
line_node_perf_test.py, avg. FPS: 238.4483
test_opacity_perf_test.py, avg. FPS: 88.57104
test_perf_test.py, avg. FPS: 111.4178
circle_node_perf_test.py, avg. FPS: 238.7479
vox_node_perf_test.py, avg. FPS: 48.42994
}


 ----- 



2024-04-24 10:30:48.935746 : 341eacb050aef6bfd94a3dd83716c1be03ff6f65
Fix sprite seg fault when the sprite has no texture

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 90.03944
test_perf_test.py, avg. FPS: 112.1122
circle_node_perf_test.py, avg. FPS: 240.7442
vox_node_perf_test.py, avg. FPS: 46.90078
}


 ----- 



2024-04-24 13:20:36.542429 : 71288fce6ae71f47e1c097d1525c53da73defffd
Add stop function to Tween stop it and set value to end value. Work on main menu. Floor all drawing nodes to reduce amount of position jitter relative to other nodes/sprites/bitmaps

{
line_node_perf_test.py, avg. FPS: 238.9483
test_opacity_perf_test.py, avg. FPS: 90.03567
test_perf_test.py, avg. FPS: 114.3531
circle_node_perf_test.py, avg. FPS: 240.746
vox_node_perf_test.py, avg. FPS: 48.52477
}


 ----- 



2024-04-25 13:18:19.211569 : 0519ec1e5f13e09f38752592c41e54683f17a681
Add letter and line spacing to nodes that draw text

{
line_node_perf_test.py, avg. FPS: 238.7817
test_opacity_perf_test.py, avg. FPS: 87.53579
test_perf_test.py, avg. FPS: 110.9827
circle_node_perf_test.py, avg. FPS: 239.4127
vox_node_perf_test.py, avg. FPS: 48.48932
}


 ----- 



2024-04-25 13:49:56.377088 : b0b074b73689dead1a55f3d966fe5c39c0716b7d
Add letter and line spacing to nodes that draw text

{
line_node_perf_test.py, avg. FPS: 238.7818
test_opacity_perf_test.py, avg. FPS: 88.42722
test_perf_test.py, avg. FPS: 109.6031
circle_node_perf_test.py, avg. FPS: 241.0775
vox_node_perf_test.py, avg. FPS: 46.82267
}


 ----- 



