2024-04-03 17:50:48.228476 : 6dbf33d859d4134bc0f794b4c11eac478a6a2139
test performance

{
line_node_perf_test.py, avg. FPS: 239.2818
circle_node_perf_test.py, avg. FPS: 241.3116
vox_node_perf_test.py, avg. FPS: 41.79807
}


 ----- 


2024-04-05 11:17:26.134569 : 572dee31309a3f54b79df1d1dbf7fc6beb2ca444
Make sure nodes draw as fast as possible if they do not use opacity

{
line_node_perf_test.py, avg. FPS: 239.1151
test_opacity_perf_test.py, avg. FPS: 51.24171
test_perf_test.py, avg. FPS: 98.04024
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 43.04103
}


 ----- 


2024-04-05 11:31:40.731816 : 2732279ce264f568ba629c07f5c1aea8a1373784
Speed up blending alpha and colors by removing if statements

{
line_node_perf_test.py, avg. FPS: 239.2816
test_opacity_perf_test.py, avg. FPS: 80.01699
test_perf_test.py, avg. FPS: 97.79822
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 43.04638
}


 ----- 


2024-04-05 11:37:28.624966 : e24204337113ae0c922a7ea5df2207371f5c6e08
Try adding perf samples to commit after commit

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.66255
test_perf_test.py, avg. FPS: 99.46484
circle_node_perf_test.py, avg. FPS: 241.4409
vox_node_perf_test.py, avg. FPS: 43.04658
}


 ----- 


2024-04-05 11:41:22.567525 : ae865be7a936ec6ba26a1b057264e864168e4d16
Try to not run pre-commit hook, again

{
line_node_perf_test.py, avg. FPS: 239.1153
test_opacity_perf_test.py, avg. FPS: 81.66224
test_perf_test.py, avg. FPS: 99.43963
circle_node_perf_test.py, avg. FPS: 239.7778
vox_node_perf_test.py, avg. FPS: 44.71316
}


 ----- 



2024-04-05 15:16:20.138477 : e017fe51c36985960335792ad4c334b4ce164503
Add libraries as submodules

{
line_node_perf_test.py, avg. FPS: 239.1152
test_opacity_perf_test.py, avg. FPS: 80.1851
test_perf_test.py, avg. FPS: 98.1317
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 43.24937
}


 ----- 



2024-04-10 10:30:20.897533 : 8d34b7db69ca04cce3212ee4fbc425e5951cccd6
Fix mesh rendering so that it is faster and doesn't draw triangles that are behind the screen or all the way out of bounds

{
line_node_perf_test.py, avg. FPS: 238.9486
test_opacity_perf_test.py, avg. FPS: 79.92868
test_perf_test.py, avg. FPS: 98.61657
circle_node_perf_test.py, avg. FPS: 239.6111
vox_node_perf_test.py, avg. FPS: 44.75964
}


 ----- 



2024-04-10 11:15:52.349092 : 752bd79c022414a5d1bc1d27d64174c2dc644e99
Expose attributes of NoiseResource

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 82.42863
test_perf_test.py, avg. FPS: 101.7345
circle_node_perf_test.py, avg. FPS: 241.4444
vox_node_perf_test.py, avg. FPS: 44.89149
}


 ----- 



2024-04-11 16:14:32.081177 : 82f80a5033a0b871a2f935e899f67c862673e8b3
Work on GUI mode switching and fix scaling issue when drawing all nodes with respect to camera

{
line_node_perf_test.py, avg. FPS: 238.4486
test_opacity_perf_test.py, avg. FPS: 80.37726
test_perf_test.py, avg. FPS: 98.98022
circle_node_perf_test.py, avg. FPS: 240.7742
vox_node_perf_test.py, avg. FPS: 43.18343
}


 ----- 



2024-04-12 11:48:10.088081 : c353f44b443138a45db9fe98ec7861da6b503d43
Finish GUIButton2DNode callbacks and basic drawing

{
line_node_perf_test.py, avg. FPS: 238.6151
test_opacity_perf_test.py, avg. FPS: 80.22475
test_perf_test.py, avg. FPS: 98.01529
circle_node_perf_test.py, avg. FPS: 239.4444
vox_node_perf_test.py, avg. FPS: 43.23137
}


 ----- 
2024-04-12 15:24:16.327661 : c02927ff010bc205f44d71eec95a1ebd3bad317f
Remove node common data from node base

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.91862
test_perf_test.py, avg. FPS: 98.49517
circle_node_perf_test.py, avg. FPS: 241.6075
vox_node_perf_test.py, avg. FPS: 45.02475
}


 ----- 


2024-04-15 15:26:07.055101 : dce6932e282d0a710b170a1430e187d72315b6f9
Work on GUI and add  to engine_animation for calling code after a certain amount of time

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 81.47538
test_perf_test.py, avg. FPS: 98.1916
circle_node_perf_test.py, avg. FPS: 241.4091
vox_node_perf_test.py, avg. FPS: 45.63897
}


 ----- 



2024-04-16 11:47:08.709131 : 7cf6d43f823f04ff0f03548f86ceb850ea0eaba1
Make it so that audio is not adaptive and that the user needs to control gains to balance everything. Also fix some audio playback errors

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 78.91424
test_perf_test.py, avg. FPS: 98.89349
circle_node_perf_test.py, avg. FPS: 239.7407
vox_node_perf_test.py, avg. FPS: 43.67567
}


 ----- 



2024-04-18 17:13:48.285031 : 3ecb3fe78815035946a836afe41b56afa75b3447
Mainly work on audio playback of waves and tones. Decide on 22050 as max sample rate for now

{
line_node_perf_test.py, avg. FPS: 239.115
test_opacity_perf_test.py, avg. FPS: 74.12148
test_perf_test.py, avg. FPS: 90.60519
circle_node_perf_test.py, avg. FPS: 239.8918
vox_node_perf_test.py, avg. FPS: 41.26124
}


 ----- 


2024-04-18 17:18:59.143086 : 900a53c1c6747e9af579bc79ac57ad738359e3ea
Due to performance, only allow 11025Hz sample rate for wave and tone playback. ISR takes too much time

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 81.66111
test_perf_test.py, avg. FPS: 99.62041
circle_node_perf_test.py, avg. FPS: 239.8974
vox_node_perf_test.py, avg. FPS: 44.43056
}


 ----- 



2024-04-18 17:20:08.616369 : a990db02708d5fcbd7f198fa8c7fc0c6ac6933d3
None

{
line_node_perf_test.py, avg. FPS: 239.2818
test_opacity_perf_test.py, avg. FPS: 90.54546
test_perf_test.py, avg. FPS: 112.4547
circle_node_perf_test.py, avg. FPS: 241.5741
vox_node_perf_test.py, avg. FPS: 49.53446
}


 ----- 



2024-04-19 09:55:47.324613 : b95655a94ebda728df1c30ec04cad55546201e2e
Due to performance, only allow 11025Hz sample rate for wave and tone playback. ISR takes too much time

{
line_node_perf_test.py, avg. FPS: 239.2817
test_opacity_perf_test.py, avg. FPS: 89.60998
test_perf_test.py, avg. FPS: 108.9361
circle_node_perf_test.py, avg. FPS: 241.5709
vox_node_perf_test.py, avg. FPS: 47.04472
}


 ----- 



